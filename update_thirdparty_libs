#!/bin/bash

git submodule init
git submodule sync


# From micropython-lib
# ==================================================

cat > src/lib/logging.py <<-END
# MicroPython reimplementation of Python's logging library
#
# Copied unmodified from the micropython-lib repository
#   (no code changes, only added this header)
#   https://github.com/micropython/micropython-lib/blob/master/logging/logging.py
#
# Original library is MIT licensed, as noted in setup.py
#   https://github.com/micropython/micropython-lib/blob/master/logging/setup.py
#

END
cat thirdparty/micropython-lib/logging/logging.py >> src/lib/logging.py

cat > src/lib/unittest.py <<-END
# MicroPython reimplementation of Python's unittest library
#
# Copied unmodified from the micropython-lib repository
#   (no code changes, only added this header)
#   https://github.com/micropython/micropython-lib/blob/master/unittest/unittest.py
#
# Original library is MIT licensed, as noted in setup.py
#   https://github.com/micropython/micropython-lib/blob/master/unittest/setup.py
#

END
cat thirdparty/micropython-lib/unittest/unittest.py >> src/lib/unittest.py

cat > src/lib/test_unittest.py <<-END
# MicroPython reimplementation of Python's unittest library self-test code
#
# Copied unmodified from the micropython-lib repository
#   (no code changes, only added this header)
#   https://github.com/micropython/micropython-lib/blob/master/unittest/test_unittest.py
#
# Original library is MIT licensed, as noted in setup.py
#   https://github.com/micropython/micropython-lib/blob/master/unittest/setup.py
#

END
cat thirdparty/micropython-lib/unittest/test_unittest.py >> src/lib/test_unittest.py

# From vanilla MicroPython
# ==================================================

# TODO: If pull request is accepted, change submodule url back to original
#   https://github.com/micropython/micropython.git
#

cat > src/lib/ntptime.py <<-END
# Simple NTP client implementation
#
# Forked from the original MicroPython source
#   https://github.com/micropython/micropython/blob/master/ports/esp8266/modules/ntptime.py
#
# This fork adds a host parameter to time()
#   https://github.com/arcticobservatory/micropython/blob/ntp_host_param/ports/esp8266/modules/ntptime.py
#
# Submitted upstream as pull request #5122
#   https://github.com/micropython/micropython/pull/5122
#
# Original library is MIT licensed
# https://github.com/micropython/micropython/blob/master/LICENSE
#

END
(cd thirdparty/micropython/ && git show ntp_host_param:ports/esp8266/modules/ntptime.py) >> src/lib/ntptime.py


# From Pycom
# ==================================================

cat > src/lib/onewire.py <<-END
# Driver onewire bus
#
# Copied unmodified from the pycom-libraries repository
#   (no code changes, only added this header)
#   https://github.com/pycom/pycom-libraries/blob/master/lib/onewire/onewire.py
#
# Original code is released under the Pycom license v2.2,
# which states that the file can be used as if under GPLv3 or later,
# or that it can be unsed without publishing source code if it is used unmodified.
#   https://github.com/pycom/pycom-libraries/tree/master/license
#

END
cat thirdparty/pycom-libraries/lib/onewire/onewire.py >> src/lib/onewire.py


cat > src/lib/sdcard.py <<-END
# Driver for SD card access over SPI
#
# Copied unmodified from the pycom-micropython-sigfox repository
#   (no code changes, only added this header)
#   https://github.com/pycom/pycom-micropython-sigfox/blob/master/drivers/sdcard/sdcard.py
#
# Although this file is present in the Pycom firmware sources, it is not
# available for import in the firmware on the FiPy. So, we have to put a copy
# in lib/
#
# The original file is released under the Pycom license v2.2,
# which states that the file can be used as if under GPLv3 or later,
# or that it can be unsed without publishing source code if it is used unmodified.
#   https://github.com/pycom/pycom-libraries/tree/master/license
#

END
cat thirdparty/pycom-micropython-sigfox/drivers/sdcard/sdcard.py >> src/lib/sdcard.py


# From other repositories
# ==================================================

cat > src/lib/ds3231.py <<-END
# Driver for DS3231 RTC
#
# Copied unmodified from the uptyon-aq-monitor repository
#   (no code changes, only added this header)
#   https://github.com/ayoy/upython-aq-monitor/blob/master/lib/ds3231.py
#
# Original file is MIT licenced
#

END
cat thirdparty/upython-aq-monitor/lib/ds3231.py >> src/lib/ds3231.py

